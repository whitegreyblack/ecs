# maps.py

"""Holds default maps and map functions used for testing"""

"""
Window Size : 80 x 25
Border      : -2 x -2
Game Size   : 78 x 23
Header Size : 58 x  1
Map Size    : 58 x 17
Enemy Panel : 20 x 17
Log Panel   : 78 x  5
"""

# example rooms
def create_empty_room(width: int, height: int):
    room = []
    for h in range(height):
        if h in (0, height - 1):
            row = '#' * width
        else:
            row = '#' + '.' * (width - 2) + '#'
        room.append(row)
    return '\n'.join(room)

WORLD = create_empty_room(60, 17)
HALL = create_empty_room(80, 5)

OVERWORLD = """
#########################################
#.......................................#
#...############........#############...#
#...############........#############...#
#...############........#############...#
#...######.#####........#######.#####...#
#.......................................#
#...####.#######........##.##########...#
#...############........#############...#
#...############........#############...#
#...############........#############...#
#.......................................#
#########################################"""[1:]

DUNGEON = """
###########################################################
#....#....#....#....#..........##....#....#....#....#.....#
#...................#..........##...................#.....#
#....#....#....#..........#....##....#....#....#....#.....#
#.........................................................#
#....#....#....#....#................#....#....#....#.....#
#....#....#....#....#..........##....#....#....#....#.....#
#.........................................................#
#....#....#....#..........#....##....#....#....#....#.....#
#.........................................................#
#.........................................................#
#.........................................................#
#.........................................................#
#.........................................................#
#.........................................................#
#.........................................................#
###########################################################"""[1:]

SHADOWBARROW = """
..........................................................
..........#####..#####..#####..###########.......####.....
..........#...#..#...#..#...#..#...#.#...#......##..##....
..........#...#..#...#..#...#..#...+.+...#....###....###..
..........##+##..##+##..##+##..#####.#####....#........#..
.#######.......................#...#.....#....#........#..
.#.....#.......................#...+.....#....#........#..
.#.....#.......................#####+#####....#........#..
.#.....#.....................................##........##.
.#.....+.....................................+..........#.
.#.....#.....................................##........##.
.#.....#.......................###+######....#..........#.
.#######..##+##..##+##..##+##..#........#....#..........#.
..........#...#..#...#..#...#..#........#....###......###.
..........#...#..#...#..#...#..#........#......##....##...
..........#####..#####..#####..##########.......######....
.........................................................."""[1:]

TEST = """
################################
#....#....#....#....#..........#
#...................#..........#
#....#....#....#....+.....#....#
#...........^.......#..........#
#....#....#....#....#..........#
################################"""[1:]

CORRIDORS = """
#########################
#.....#############.....#
#..<..+...........+..>..#
#.....#############.....#
#########################"""[1:]

PILLARS = """
#########################
#.....#.#.#.#...........#
#......#...#...#.#......#
#.....#.#.#.#.#.#.#.....#
#########################"""[1:]

ROOM = """
##########
#...#....#
#........#
#.....#..#
##########"""[1:]

SMALL = """
#######
#.....#
#.....#
#.....#
#######"""[1:]

TINY = """
####
#..#
####"""[1:]

LONG = """
###################################################################
#...#.............................................................#
###+#.....#########################################################
#.................................................................#
###################################################################"""[1:]

LARGE = """
################################################################
#....#....#....#....#..........##....#....#....#....#..........#
#...................#..........##...................#..........#
#....#....#....#..........#....##....#....#....#....#.....#....#
#..............................................................#
#....#....#....#....#................#....#....#....#..........#
#....#....#....#....#..........##....#....#....#....#..........#
#..............................................................#
#....#....#....#..........#....##....#....#....#....#.....#....#
#..............................................................#
#..............................................................#
#.....<..................................................>.....#
#............######>########...................................#
#............#....###......#...................................#
#............#.............#...................................#
#............#.............#...................................#
################################################################"""[1:]

HOUSE = """
########......############
#..|...#......#..........#
#..+--+##+#####....c.....#
#................+---+...#
#.............../.....\..#
#...............\...../..#
#............c...+---+...#
#........................#
##########################
"""[1:]

BLOB = """
################################
#..............................#
#..............................#
#.......#################......#
#.......................#......#
#.......................#......#
#.......................#......#
#.......................#......#
#.......................#......#
#..............................#
#..............................#
################################"""[1:]

ROGUE = """
###################################################
##################.........########################
###############......................##############
###############.##.........#########.##############
#.....#########.##.........####..................##
#...............##.........####..................##
#.....#########.##.........####..................##
###########.....###.......#####..................##
###########.########.....######..................##
###..........####################.#################
###..........#################......###############
###..........#################......###############
###################################################"""[1:]

SNAKE = """
##########
#........#
########.#
#........#
#.########
#........#
########.#
#........#
#.########
#........#
##########"""[1:]

LONG = """
##########
#........#
##########"""[1:]

BASIN = """
##########################
#......###################
#......###########.......#
#......+.........+.......#
#......#####'#####.......#
####+#######.#######+#####
##....######+#####.....###
##....######.+.........###
##....############.....###
##########################"""[1:]

PARENT = """
#############
#..........##
#.<......>..#
#..........##
#############"""[1:]

CHILD = """
######
#....#
#..<.#
#....#
######"""[1:]

ASTAR = """
###############
#.............#
#.....#.......#
#.....#.......#
#.....#.......#
#.............#
###############"""[1:]

# string maps added to config are pulled from variables() and added to list
dungeons = {
    k.lower(): v for k, v in vars().items()
        if not k.startswith('__') and isinstance(v, str)
}

def to_array(mapstring):
    return [[int(c not in ('.', '/')) for c in row] for row in mapstring.split('\n')]

if __name__ == "__main__":
    print(dungeon.keys())
